{"ast":null,"code":"var _jsxFileName = \"/home/jared/new-app/src/components/CurrentTime.js\";\nimport React from 'react';\nimport './CurrentTime.css';\n\nclass CurrentTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date().toLocaleDateString(),\n      time: new Date().toLocaleTimeString(),\n      day: new Date().getDate(),\n      year: new Date().getFullYear(),\n      hour: new Date().getHours(),\n      minute: new Date().getMinutes(),\n      second: new Date().getSeconds()\n    };\n  }\n\n  async componentDidMount() {\n    const city_1 = this.props.city;\n\n    function showWeek(objD) {\n      var vt = new Date();\n      vt = objD;\n      var str;\n      var d = new Array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'); // console.log(this.props.city);\n\n      if (city_1 === 'Sydney') {\n        if (vt.getHours() > 21) {\n          if (vt.getDay() == 6) {\n            str = \" \" + d[0];\n          } else {\n            str = \" \" + d[vt.getDay() + 1];\n          }\n        } else {\n          str = \" \" + d[vt.getDay()];\n        }\n      } // str =  \" \" + d[vt.getDay()]; \n\n\n      return str;\n    }\n\n    ;\n\n    function showHour(objD) {\n      var vt = new Date();\n      vt = objD;\n      var str;\n\n      if (city_1 === 'Sydney') {\n        if (vt.getHours() > 21) {\n          str = vt.getHours() - 22;\n        } else {\n          str = vt.getHours() + 2;\n        }\n      }\n\n      return str;\n    }\n\n    function showMonth(objD) {\n      var vt = new Date();\n      vt = objD;\n      var str;\n      var d = new Array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', \"Nov\", \"Dec\");\n      str = \" \" + d[vt.getMonth()];\n      return str;\n    }\n\n    function sec(objt) {\n      if (objt < 10) {\n        var str = '0' + objt;\n        return str;\n      }\n\n      return objt;\n    }\n\n    this.timer = setInterval(() => {\n      this.setState({\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString(),\n        day: new Date().getDate(),\n        year: new Date().getFullYear(),\n        weekday: showWeek(new Date()),\n        month: showMonth(new Date()),\n        hour: showHour(new Date()),\n        minute: new Date().getMinutes(),\n        second: sec(new Date().getSeconds())\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d_and_t\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"city_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, this.props.city), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"p1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 40\n      }\n    }, this.state.weekday, \" \", this.state.month, \" \", this.state.day, \" \", this.state.year)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"p2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"s1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 58\n      }\n    }, this.state.hour), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"c11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 103\n      }\n    }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"s2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 133\n      }\n    }, this.state.minute), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"c12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 180\n      }\n    }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"s3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 210\n      }\n    }, this.state.second))));\n  }\n\n}\n\nexport default CurrentTime;","map":{"version":3,"sources":["/home/jared/new-app/src/components/CurrentTime.js"],"names":["React","CurrentTime","Component","constructor","props","state","date","Date","toLocaleDateString","time","toLocaleTimeString","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","componentDidMount","city_1","city","showWeek","objD","vt","str","d","Array","getDay","showHour","showMonth","getMonth","sec","objt","timer","setInterval","setState","weekday","month","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CurrentTime.css'\n\nclass CurrentTime extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString(), day: new Date().getDate(), year: new Date().getFullYear(),\n        hour: new Date().getHours(), minute: new Date().getMinutes(), second: new Date().getSeconds()};\n    }\n\n    async componentDidMount() {\n        const city_1 = this.props.city\n        function showWeek(objD) {\n            var vt = new  Date();\n            vt = objD ;\n            var str;\n            var d = new Array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' );\n            // console.log(this.props.city);\n            if (city_1 === 'Sydney'){\n                if (vt.getHours() > 21) {\n                    if (vt.getDay() == 6){\n                        str =  \" \" + d[0]; \n                    } else {\n                        str =  \" \" + d[vt.getDay() + 1];\n                    }\n                    \n                } else {\n                    str =  \" \" + d[vt.getDay()]; \n                }\n            }\n            // str =  \" \" + d[vt.getDay()]; \n            return (str);\n        };\n        function showHour(objD) {\n            var vt = new  Date();\n            vt = objD ;\n            var str;\n            if (city_1 === 'Sydney'){\n                if (vt.getHours() > 21) {\n                    str =  vt.getHours() - 22; \n                } else {\n                    str =  vt.getHours() + 2; \n                }\n            }\n            return (str); \n        }\n        \n        function showMonth(objD) {\n            var vt = new  Date();\n            vt = objD ;\n            var str;\n            var d = new Array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug' , 'Sep', 'Oct', \"Nov\", \"Dec\");\n            str =  \" \" + d[vt.getMonth()]; \n            return (str);\n        }\n        function sec(objt) {\n            if (objt < 10) {\n                var str = '0' + objt\n                return str\n            }\n            return objt\n        }\n        this.timer = setInterval(() => {\n            this.setState({date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString(), day: new Date().getDate(), year: new Date().getFullYear(),\n                weekday: showWeek(new Date), month: showMonth(new Date), hour: showHour(new Date), minute: new Date().getMinutes(), second: sec(new Date().getSeconds())});\n        }, 1000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.timer)\n    }\n    render() {\n        return (\n            <div className='d_and_t'>\n                <div className='city_name'>{this.props.city}</div>\n                <div className='dates'><p className='p1'>{this.state.weekday} {this.state.month} {this.state.day} {this.state.year}</p></div>\n                <div className='times'><p className='p2'><span className='s1'>{this.state.hour}</span><span className='c11'>:</span><span className='s2'>{this.state.minute}</span><span className='c12'>:</span><span className='s3'>{this.state.second}</span></p></div>\n            </div>\n            \n        )\n    }\n}\nexport default CurrentTime"]},"metadata":{},"sourceType":"module"}