{"ast":null,"code":"var _jsxFileName = \"/home/jared/new-app/src/components/CurrentTime.js\";\nimport React from 'react';\nimport './CurrentTime.css';\n\nclass CurrentTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date().toLocaleDateString(),\n      time: new Date().toLocaleTimeString(),\n      day: new Date().getDate(),\n      year: new Date().getFullYear(),\n      month: new Date().getMonth(),\n      hour: new Date().getHours(),\n      minute: new Date().getMinutes(),\n      second: new Date().getSeconds()\n    };\n  }\n\n  componentDidMount() {\n    function showWeek(objD) {\n      var vt = new Date();\n      vt = objD;\n      var str;\n      var d = new Array('周日', '周一', '周二', '周三', '周四', '周五', '周六');\n      str = \" \" + d[vt.getDay()];\n      return str;\n    }\n\n    this.timer = setInterval(() => {\n      this.setState({\n        date: new Date().toLocaleDateString(),\n        time: new Date().toLocaleTimeString(),\n        day: new Date().getDate(),\n        year: new Date().getFullYear(),\n        weekday: showWeek(new Date()),\n        month: new Date().getMonth() + 1,\n        hour: new Date().getHours(),\n        minute: new Date().getMinutes(),\n        second: new Date().getSeconds()\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    // function trranslate(str) {\n    //     const res = str.slice(0, 1);\n    //     if res === '下午' {\n    //         const afternoon = str.slice(2)\n    //     }\n    // }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d_and_t\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"p1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 40\n      }\n    }, this.state.weekday, \" \", this.state.month, \" \", this.state.day, \" \", this.state.year)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"p2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"s1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 58\n      }\n    }, this.state.hour), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 103\n      }\n    }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"s2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 132\n      }\n    }, this.state.minute), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"c2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 179\n      }\n    }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"s3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 208\n      }\n    }, this.state.second))));\n  }\n\n}\n\nexport default CurrentTime;","map":{"version":3,"sources":["/home/jared/new-app/src/components/CurrentTime.js"],"names":["React","CurrentTime","Component","constructor","props","state","date","Date","toLocaleDateString","time","toLocaleTimeString","day","getDate","year","getFullYear","month","getMonth","hour","getHours","minute","getMinutes","second","getSeconds","componentDidMount","showWeek","objD","vt","str","d","Array","getDay","timer","setInterval","setState","weekday","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CurrentTime.css'\n\nclass CurrentTime extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString(), day: new Date().getDate(), year: new Date().getFullYear(),\n        month: new Date().getMonth(), hour: new Date().getHours(), minute: new Date().getMinutes(), second: new Date().getSeconds()};\n    }\n    componentDidMount() {\n        function showWeek(objD) {\n            var vt =new  Date();\n            vt=objD ;\n            var str;\n            var d=new Array('周日', '周一', '周二', '周三', '周四', '周五', '周六' );\n            str =  \" \" + d[vt.getDay()]; \n            return (str);\n            }\n        this.timer = setInterval(() => {\n            this.setState({date: new Date().toLocaleDateString(), time: new Date().toLocaleTimeString(), day: new Date().getDate(), year: new Date().getFullYear(),\n                weekday: showWeek(new Date), month: new Date().getMonth() + 1, hour: new Date().getHours(), minute: new Date().getMinutes(), second: new Date().getSeconds()});\n        }, 1000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.timer)\n    }\n    render() {\n        // function trranslate(str) {\n        //     const res = str.slice(0, 1);\n        //     if res === '下午' {\n        //         const afternoon = str.slice(2)\n        //     }\n        // }\n        return (\n            <div className='d_and_t'>\n                <div className='dates'><p className='p1'>{this.state.weekday} {this.state.month} {this.state.day} {this.state.year}</p></div>\n                <div className='times'><p className='p2'><span className='s1'>{this.state.hour}</span><span className='c1'>:</span><span className='s2'>{this.state.minute}</span><span className='c2'>:</span><span className='s3'>{this.state.second}</span></p></div>\n            </div>\n            \n        )\n    }\n}\nexport default CurrentTime"]},"metadata":{},"sourceType":"module"}